# Avrora9

# Trivially left out
Lavrora/Main;.main ([Ljava/lang/String;)V:100(0)
Lavrora/sim/SimulatorThread;.run ()V:96(0)
Lavrora/sim/Simulator;.start ()V:522(9)
Lavrora/actions/Action;.run ()V:67(0)
Lavrora/actions/SimAction;.run ([Ljava/lang/String;)V:84(0)
Lavrora/sim/Simulation;.join ()V:505(0)
Lavrora/sim/clock/Synchronizer;.join ()V:87(0)
Lavrora/sim/clock/RippleSynchronizer;.join ()V:221(0)

# Velodrome results

Lavrora/sim/AtmelInterpreter;.start ()V:381(0)
Lavrora/sim/clock/RippleSynchronizer;.removeNode (Lavrora/sim/Simulation$Node;)V:289(0)
Lavrora/arch/legacy/LegacyInterpreter;.runLoop ()V:82(0)

# Avrora9 seems to run okay till this point, after that there are several full heap GCs, if Velodrome is implemented
# using strong references. It can run to completion with a weak references implementation.

Lavrora/sim/AtmelInterpreter;.advanceClock (J)V:522(0)
Lavrora/arch/legacy/LegacyInterpreter;.fastLoop ()V:251(0)
Lavrora/arch/legacy/LegacyInterpreter;.sleepLoop ()V:244(0)
Lavrora/sim/clock/MainClock;.skipAhead ()V:118(-2)
Lavrora/sim/clock/MainClock;.advance (J)V:100(0)
Lavrora/sim/clock/DeltaQueue;.advance (J)V:238(0)
Lavrora/sim/clock/DeltaQueue;.skipAhead ()V:259(-2)
Lavrora/sim/clock/DeltaQueue;.advanceSlow (J)V:274(0)
Lavrora/sim/clock/DeltaQueue$Link;.fire ()V:123(-2)
Lavrora/sim/radio/Medium$Receiver$Ticker;.fireUnlocked (J)V:329(-2)
Lavrora/sim/radio/Medium$Receiver$Ticker;.fire ()V:311(-2)
Lavrora/sim/radio/Medium$Receiver$Ticker;.fireLocked (J)V:367(0)
Lavrora/sim/radio/Medium$Receiver;.access$000 (Lavrora/sim/radio/Medium$Receiver;J)V:260(0)
Lavrora/sim/radio/Medium$Receiver;.waitForNeighbors (J)V:537(-2)
Lavrora/sim/clock/RippleSynchronizer;.waitForNeighbors (J)V:307(0)
Lavrora/sim/clock/RippleSynchronizer;.waitFor (JLavrora/sim/clock/RippleSynchronizer$WaitLink;)V:155(0)
Lavrora/sim/clock/RippleSynchronizer;.waitForLink (Lavrora/sim/clock/RippleSynchronizer$WaitLink;)V:179(-2)
Lavrora/sim/radio/Medium$Receiver$Ticker;.deliverByte (J)V:378(0)
Lavrora/sim/AtmelInterpreter;.commit ()V:1057(-2)
Lavrora/sim/clock/RippleSynchronizer;.advance (JLavrora/sim/clock/RippleSynchronizer$WaitLink;)Lavrora/sim/clock/RippleSynchronizer$WaitLink;:124(-2)

